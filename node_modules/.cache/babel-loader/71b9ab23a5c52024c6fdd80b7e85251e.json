{"ast":null,"code":"var _jsxFileName = \"/home/gvnbleid/development/stroop-effect/front/src/App.tsx\";\nimport React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Stopwatch } from \"ts-stopwatch\";\nimport Button from '@material-ui/core/Button';\nimport * as request from 'request';\nconst numberOfSets = 3;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.stopwatch = new Stopwatch();\n    this.state = {\n      stimulus: {\n        name: \"tygrys\",\n        color: 'blue'\n      },\n      stimuli: []\n    };\n    this.shouldLoadNextSet = false;\n    this.currentSet = 0;\n\n    this.onAnswer = event => {\n      event.preventDefault();\n      this.setState(previousState => {\n        var x = previousState.stimuli.shift();\n\n        if (x == null) {\n          console.log(\"set finished\");\n          this.shouldLoadNextSet = true;\n          this.forceUpdate();\n        }\n\n        this.stopwatch.slice();\n        return {\n          stimulus: {\n            name: x.name,\n            color: x.color\n          },\n          stimuli: [...previousState.stimuli]\n        };\n      });\n    };\n\n    this.getSet = index => {\n      request.get(\"http://localhost:3001/stimuli/getPackage?field=\".concat(index), (request, response) => {\n        const stimuli = JSON.parse(response.body);\n        console.log(stimuli);\n        this.setState(prevState => {\n          const stimulus = stimuli.shift();\n          return {\n            stimulus: stimulus,\n            stimuli: stimuli\n          };\n        });\n      });\n    };\n\n    this.onClick = () => {\n      this.currentSet++;\n      this.shouldLoadNextSet = false;\n      this.getSet(this.currentSet);\n    };\n\n    this.loadNextSet = () => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"style=\", {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Zako\\u0144czy\\u0142e\\u015B odpowiadanie na zestaw. Kliknij w przycisk aby przej\\u015B\\u0107 do nast\\u0119pnego zestawu\"), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        \"text-align\": \"center\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Nast\\u0119pny zestaw\"));\n    };\n  }\n\n  componentDidMount() {\n    console.log('triggered');\n    this.getSet(this.currentSet);\n  }\n\n  render() {\n    if (this.shouldLoadNextSet) {\n      return this.loadNextSet();\n    }\n\n    this.stopwatch.start();\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(StimulusForm, {\n      stimulus: this.state.stimulus,\n      onAnswer: this.onAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.stopwatch.getCompletedSlices().map(slice => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, slice.startTime, \"; \", slice.endTime, \"; \", slice.duration);\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gvnbleid/development/stroop-effect/front/src/App.tsx"],"names":["React","Component","StimulusForm","Stopwatch","Button","request","numberOfSets","App","stopwatch","state","stimulus","name","color","stimuli","shouldLoadNextSet","currentSet","onAnswer","event","preventDefault","setState","previousState","x","shift","console","log","forceUpdate","slice","getSet","index","get","response","JSON","parse","body","prevState","onClick","loadNextSet","display","justifyContent","alignItems","componentDidMount","render","start","getCompletedSlices","map","startTime","endTime","duration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Stimulus } from './models/stimulus';\nimport { Stopwatch } from \"ts-stopwatch\"\nimport Button from '@material-ui/core/Button';\nimport * as request from 'request'\n\ninterface State {\n  stimulus: Stimulus;\n  stimuli: Stimulus[];\n}\n\nconst numberOfSets = 3;\n\nclass App extends Component<{}, State> {\n  stopwatch = new Stopwatch();\n\n  state = {\n    stimulus: {\n      name: \"tygrys\",\n      color: 'blue'\n    },\n    stimuli: []\n  };\n\n  shouldLoadNextSet = false;\n  currentSet = 0;\n  \n  private onAnswer = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState(previousState => {\n      var x = previousState.stimuli.shift();\n      \n      if(x == null) {\n        console.log(\"set finished\");\n        this.shouldLoadNextSet = true;\n        this.forceUpdate();\n      }\n\n      this.stopwatch.slice();\n\n      return ({\n        stimulus: {\n          name: x.name,\n          color: x.color\n        },\n        stimuli: [...previousState.stimuli]\n      })\n    });\n  };\n\n  private getSet = (index: number) => {\n    request.get(`http://localhost:3001/stimuli/getPackage?field=${index}`, (request:any, response: any) => {\n      const stimuli : {name: string, color: string}[] = JSON.parse(response.body);\n      console.log(stimuli);\n      this.setState((prevState) => {\n        const stimulus : {name:string, color: string} = stimuli.shift() as {name:string, color: string};\n        return({\n          stimulus: stimulus,\n          stimuli: stimuli\n        });\n      });\n    })\n  };\n\n  private onClick = () => {\n    this.currentSet++;\n    this.shouldLoadNextSet = false;\n    this.getSet(this.currentSet);\n  };\n\n  private loadNextSet = () => {\n    return (\n      <div>\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n\n        <p>Zakończyłeś odpowiadanie na zestaw. Kliknij w przycisk aby przejść do następnego zestawu</p>\n        <Button type=\"submit\" variant=\"contained\" text-align=\"center\" onClick={this.onClick}>Następny zestaw</Button>\n      </div>\n    );\n  };\n\n  componentDidMount() {\n    console.log('triggered');\n    this.getSet(this.currentSet);\n  }\n\n  render() {   \n    if(this.shouldLoadNextSet) {\n      return this.loadNextSet();\n\n    }\n    this.stopwatch.start();\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <table>\n          <tr>\n            <td>\n              <StimulusForm stimulus={this.state.stimulus} onAnswer={this.onAnswer}/>\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <ol>\n                {this.stopwatch.getCompletedSlices().map(slice => {\n                  return (<li>{slice.startTime}; {slice.endTime}; {slice.duration}</li>);\n                  })\n                }\n              </ol>\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}