{"ast":null,"code":"import _slicedToArray from \"/home/gvnbleid/development/stroop-effect/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gvnbleid/development/stroop-effect/front/src/components/BreakScreen.tsx\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Stopwatch } from \"ts-stopwatch\";\nexport const BreakScreen = ({\n  breakTime,\n  onTimePassed\n}) => {\n  const _useState = useState({\n    text: \"Zakończyłeś odpowiadanie na zestaw. Poczekaj 2 min i kliknij w przycisk, aby przejść do następnego zestawu.\",\n    stopwatch: new Stopwatch()\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const styles = {\n    \"text-align\": \"center\"\n  };\n  const stopwatch = new Stopwatch();\n  stopwatch.start();\n\n  const onClick = () => {\n    if (stopwatch.getTime() < breakTime) {\n      setPText(`Jeszcze nie upłynęły 2 min. Pozostało ${Math.floor((breakTime - stopwatch.getTime()) / 1000)}s`);\n    } else {\n      onTimePassed();\n    }\n  };\n\n  const buttonStyles = {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  };\n  return React.createElement(\"div\", {\n    style: {\n      width: '65%',\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontSize: '160%',\n      textAlign: \"center\",\n      marginBottom: \"5%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, pText), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      display: \"inline-block\",\n      float: \"none\"\n    },\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Nast\\u0119pny zestaw\"));\n};","map":{"version":3,"sources":["/home/gvnbleid/development/stroop-effect/front/src/components/BreakScreen.tsx"],"names":["React","useState","Button","Stopwatch","BreakScreen","breakTime","onTimePassed","text","stopwatch","state","setState","styles","start","onClick","getTime","setPText","Math","floor","buttonStyles","width","textAlign","fontSize","marginBottom","height","pText","display","float"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAOA,OAAO,MAAMC,WAAqC,GAAG,CAAC;AAClDC,EAAAA,SADkD;AAElDC,EAAAA;AAFkD,CAAD,KAG/C;AAAA,oBAEwBL,QAAQ,CAC9B;AACIM,IAAAA,IAAI,EAAE,6GADV;AAEIC,IAAAA,SAAS,EAAE,IAAIL,SAAJ;AAFf,GAD8B,CAFhC;AAAA;AAAA,QAEKM,KAFL;AAAA,QAEYC,QAFZ;;AAQF,QAAMC,MAAM,GAAG;AACX,kBAAc;AADH,GAAf;AAIA,QAAMH,SAAS,GAAG,IAAIL,SAAJ,EAAlB;AACAK,EAAAA,SAAS,CAACI,KAAV;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAGL,SAAS,CAACM,OAAV,KAAsBT,SAAzB,EAAoC;AAChCU,MAAAA,QAAQ,CAAE,yCAAwCC,IAAI,CAACC,KAAL,CAAW,CAACZ,SAAS,GAAGG,SAAS,CAACM,OAAV,EAAb,IAAoC,IAA/C,CAAqD,GAA/F,CAAR;AACH,KAFD,MAEO;AACHR,MAAAA,YAAY;AACf;AACJ,GAND;;AAQA,QAAMY,YAAY,GAAG;AACjB,aAAS,MADQ;AAEjB,cAAU;AAFO,GAArB;AAIA,SACI;AAAK,IAAA,KAAK,EAAE;AACRC,MAAAA,KAAK,EAAE,KADC;AAERC,MAAAA,SAAS,EAAE;AAFH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAG,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBD,MAAAA,SAAS,EAAE,QAA9B;AAAwCE,MAAAA,YAAY,EAAE,IAAtD;AAA4DC,MAAAA,MAAM,EAAE;AAApE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwFC,KAAxF,CAJJ,EAKI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,cAAV;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAAnC;AAA6E,IAAA,OAAO,EAAEb,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CADJ;AASH,CAvCM","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport { Stopwatch } from \"ts-stopwatch\"\n\ninterface Props {\n    breakTime: number;\n    onTimePassed: () => void;\n}\n\nexport const BreakScreen: FunctionComponent<Props> = ({\n    breakTime,\n    onTimePassed\n}) => {\n\n    const [state, setState] = useState(\n        {\n            text: \"Zakończyłeś odpowiadanie na zestaw. Poczekaj 2 min i kliknij w przycisk, aby przejść do następnego zestawu.\",\n            stopwatch: new Stopwatch()\n        });\n\n    const styles = {\n        \"text-align\": \"center\"\n    }\n\n    const stopwatch = new Stopwatch();\n    stopwatch.start();\n\n    const onClick = () => {\n        if(stopwatch.getTime() < breakTime) {\n            setPText(`Jeszcze nie upłynęły 2 min. Pozostało ${Math.floor((breakTime - stopwatch.getTime()) / 1000)}s`);\n        } else {\n            onTimePassed();\n        }\n    };\n\n    const buttonStyles = {\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n    }\n    return (\n        <div style={{\n            width: '65%',\n            textAlign: \"center\"\n        }}>\n            <p style={{fontSize: '160%', textAlign: \"center\", marginBottom: \"5%\", height: \"100%\"}}>{pText}</p>\n            <Button variant=\"contained\" style={{display: \"inline-block\", float: \"none\"}} onClick={onClick}>Następny zestaw</Button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}