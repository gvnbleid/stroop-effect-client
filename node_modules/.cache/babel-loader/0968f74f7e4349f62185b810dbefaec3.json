{"ast":null,"code":"var _jsxFileName = \"/home/gvnbleid/development/stroop-effect/src/App.tsx\";\nimport React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Timer } from './components/Timer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.timer = new Timer();\n    this.state = {\n      stimulus: {\n        name: \"tygrys\",\n        color: 'blue'\n      },\n      stimuli: [{\n        name: \"słoń\",\n        color: 'red'\n      }, {\n        name: \"zielony\",\n        color: 'green'\n      }],\n      time: 0\n    };\n\n    this.onAnswer = event => {\n      event.preventDefault();\n      this.setState(previousState => {\n        var x = previousState.stimuli.shift();\n\n        if (x == null) {\n          return;\n        }\n\n        return {\n          stimulus: {\n            name: x.name,\n            color: x.color\n          },\n          stimuli: [...previousState.stimuli],\n          time: this.timer.counter\n        };\n      });\n      this.timer = new Timer();\n    };\n  }\n\n  render() {\n    this.timer = new Timer();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(StimulusForm, {\n      stimulus: this.state.stimulus,\n      onAnswer: this.onAnswer,\n      time: this.state.time,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gvnbleid/development/stroop-effect/src/App.tsx"],"names":["React","Component","StimulusForm","Timer","App","timer","state","stimulus","name","color","stimuli","time","onAnswer","event","preventDefault","setState","previousState","x","shift","counter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AAEA,SAASC,KAAT,QAAsB,oBAAtB;;AAQA,MAAMC,GAAN,SAAkBH,SAAlB,CAAuC;AAAA;AAAA;AAAA,SACrCI,KADqC,GAC7B,IAAIF,KAAJ,EAD6B;AAAA,SAErCG,KAFqC,GAE7B;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,QADE;AAERC,QAAAA,KAAK,EAAE;AAFC,OADJ;AAKNC,MAAAA,OAAO,EAAE,CACP;AACEF,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADO,EAKP;AACED,QAAAA,IAAI,EAAE,SADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALO,CALH;AAeNE,MAAAA,IAAI,EAAE;AAfA,KAF6B;;AAAA,SAoB7BC,QApB6B,GAoBjBC,KAAD,IAA6C;AAC9DA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAcC,aAAa,IAAI;AAC7B,YAAIC,CAAC,GAAGD,aAAa,CAACN,OAAd,CAAsBQ,KAAtB,EAAR;;AAEA,YAAGD,CAAC,IAAI,IAAR,EAAc;AACZ;AACD;;AAED,eAAQ;AACRV,UAAAA,QAAQ,EAAE;AACRC,YAAAA,IAAI,EAAES,CAAC,CAACT,IADA;AAERC,YAAAA,KAAK,EAAEQ,CAAC,CAACR;AAFD,WADF;AAKRC,UAAAA,OAAO,EAAE,CAAC,GAAGM,aAAa,CAACN,OAAlB,CALD;AAMRC,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWc;AANT,SAAR;AAQD,OAfD;AAiBA,WAAKd,KAAL,GAAa,IAAIF,KAAJ,EAAb;AACD,KAzCoC;AAAA;;AA2CrCiB,EAAAA,MAAM,GAAG;AACP,SAAKf,KAAL,GAAa,IAAIF,KAAJ,EAAb;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,QAAnC;AAA6C,MAAA,QAAQ,EAAE,KAAKK,QAA5D;AAAsE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWK,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAlDoC;;AAqDvC,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Stimulus } from './models/stimulus';\nimport { Timer } from './components/Timer'\n\ninterface State {\n  stimulus: Stimulus;\n  stimuli: Stimulus[];\n  time: Number;\n}\n\nclass App extends Component<{}, State> {\n  timer = new Timer();\n  state = {\n    stimulus: {\n      name: \"tygrys\",\n      color: 'blue'\n    },\n    stimuli: [\n      {\n        name: \"słoń\",\n        color: 'red'\n      },\n      {\n        name: \"zielony\",\n        color: 'green'\n      }\n    ],\n    time: 0\n  };\n  \n  private onAnswer = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState(previousState => {\n      var x = previousState.stimuli.shift();\n      \n      if(x == null) {\n        return;\n      }\n\n      return ({\n      stimulus: {\n        name: x.name,\n        color: x.color\n      },\n      stimuli: [...previousState.stimuli],\n      time: this.timer.counter\n      })\n    });\n\n    this.timer = new Timer();\n  };\n\n  render() {\n    this.timer = new Timer();\n    return (\n      <div>\n        <StimulusForm stimulus={this.state.stimulus} onAnswer={this.onAnswer} time={this.state.time}/>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}