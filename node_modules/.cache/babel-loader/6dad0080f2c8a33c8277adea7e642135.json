{"ast":null,"code":"var _jsxFileName = \"/home/gvnbleid/development/stroop-effect/src/App.tsx\";\nimport React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Stopwatch } from \"ts-stopwatch\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.stopwatch = new Stopwatch();\n    this.state = {\n      stimulus: {\n        name: \"tygrys\",\n        color: 'blue'\n      },\n      stimuli: [{\n        name: \"słoń\",\n        color: 'red'\n      }, {\n        name: \"zielony\",\n        color: 'green'\n      }, {\n        name: \"zielony\",\n        color: 'green'\n      }, {\n        name: \"zielony\",\n        color: 'blue'\n      }, {\n        name: \"czerwony\",\n        color: 'red'\n      }, {\n        name: \"czerwony\",\n        color: 'green'\n      }, {\n        name: \"surykatka\",\n        color: 'red'\n      }, {\n        name: \"surykatka\",\n        color: 'purple'\n      }, {\n        name: \"fioletowy\",\n        color: 'purple'\n      }, {\n        name: \"fioletowy\",\n        color: 'green'\n      }]\n    };\n\n    this.onAnswer = event => {\n      event.preventDefault();\n      this.setState(previousState => {\n        var x = previousState.stimuli.shift();\n\n        if (x == null) {\n          return;\n        }\n\n        this.stopwatch.slice();\n        return {\n          stimulus: {\n            name: x.name,\n            color: x.color\n          },\n          stimuli: [...previousState.stimuli]\n        };\n      });\n    };\n  }\n\n  render() {\n    var redis = require('redis');\n\n    var client = redis.createClient();\n    client.on('connect', () => {\n      console.log('Redis client connected');\n    });\n    this.stopwatch.start();\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(StimulusForm, {\n      stimulus: this.state.stimulus,\n      onAnswer: this.onAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.stopwatch.getCompletedSlices().map(slice => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, slice.startTime, \"; \", slice.endTime, \"; \", slice.duration);\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gvnbleid/development/stroop-effect/src/App.tsx"],"names":["React","Component","StimulusForm","Stopwatch","App","stopwatch","state","stimulus","name","color","stimuli","onAnswer","event","preventDefault","setState","previousState","x","shift","slice","render","redis","require","client","createClient","on","console","log","start","display","justifyContent","alignItems","getCompletedSlices","map","startTime","endTime","duration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StimulusForm } from './components/StimulusForm';\nimport { Stimulus } from './models/stimulus';\nimport { Stopwatch } from \"ts-stopwatch\"\n\ninterface State {\n  stimulus: Stimulus;\n  stimuli: Stimulus[];\n}\n\nclass App extends Component<{}, State> {\n  stopwatch = new Stopwatch();\n  state = {\n    stimulus: {\n      name: \"tygrys\",\n      color: 'blue'\n    },\n    stimuli: [\n      {\n        name: \"słoń\",\n        color: 'red'\n      },\n      {\n        name: \"zielony\",\n        color: 'green'\n      },\n      {\n        name: \"zielony\",\n        color: 'green'\n      },\n      {\n        name: \"zielony\",\n        color: 'blue'\n      },\n      {\n        name: \"czerwony\",\n        color: 'red'\n      },\n      {\n        name: \"czerwony\",\n        color: 'green'\n      },\n      {\n        name: \"surykatka\",\n        color: 'red'\n      },\n      {\n        name: \"surykatka\",\n        color: 'purple'\n      },\n      {\n        name: \"fioletowy\",\n        color: 'purple'\n      },\n      {\n        name: \"fioletowy\",\n        color: 'green'\n      },\n    ]\n  };\n  \n  private onAnswer = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    this.setState(previousState => {\n      var x = previousState.stimuli.shift();\n      \n      if(x == null) {\n        return;\n      }\n\n      this.stopwatch.slice();\n\n      return ({\n        stimulus: {\n          name: x.name,\n          color: x.color\n        },\n        stimuli: [...previousState.stimuli]\n      })\n    });\n  };\n\n  render() {\n    var redis = require('redis');\n    var client = redis.createClient();\n\n    client.on('connect', () => {\n      console.log('Redis client connected');\n    });\n\n    this.stopwatch.start();\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }}\n      >\n        <table>\n          <tr>\n            <td>\n              <StimulusForm stimulus={this.state.stimulus} onAnswer={this.onAnswer}/>\n            </td>\n          </tr>\n\n          <tr>\n            <td>\n              <ol>\n                {this.stopwatch.getCompletedSlices().map(slice => {\n                  return (<li>{slice.startTime}; {slice.endTime}; {slice.duration}</li>);\n                  })\n                }\n              </ol>\n            </td>\n          </tr>\n        </table>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}