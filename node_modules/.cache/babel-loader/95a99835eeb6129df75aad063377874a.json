{"ast":null,"code":"import _slicedToArray from \"/home/gvnbleid/development/stroop-effect/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gvnbleid/development/stroop-effect/front/src/components/BreakScreen.tsx\";\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Stopwatch } from \"ts-stopwatch\";\nexport const BreakScreen = ({\n  breakTime,\n  onTimePassed\n}) => {\n  const _useState = useState(\"Zakończyłeś odpowiadanie na zestaw. Poczekaj 2 min i kliknij w przycisk, aby przejść do następnego zestawu\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        pText = _useState2[0],\n        setPText = _useState2[1];\n\n  const styles = {\n    \"text-align\": \"center\"\n  };\n  const stopwatch = new Stopwatch();\n  stopwatch.start();\n\n  const onClick = () => {\n    if (stopwatch.getTime() < breakTime) {\n      setPText(\"Jeszcze nie upłynęły 2 min\");\n    } else {\n      onTimePassed();\n    }\n  };\n\n  const buttonStyles = {\n    \"width\": \"100%\",\n    \"height\": \"100%\"\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, pText), React.createElement(Button, {\n    variant: \"contained\",\n    \"text-align\": \"center\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Nast\\u0119pny zestaw\"));\n};","map":{"version":3,"sources":["/home/gvnbleid/development/stroop-effect/front/src/components/BreakScreen.tsx"],"names":["React","useState","Button","Stopwatch","BreakScreen","breakTime","onTimePassed","pText","setPText","styles","stopwatch","start","onClick","getTime","buttonStyles"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAOA,OAAO,MAAMC,WAAqC,GAAG,CAAC;AAClDC,EAAAA,SADkD;AAElDC,EAAAA;AAFkD,CAAD,KAG/C;AAAA,oBACwBL,QAAQ,CAAC,4GAAD,CADhC;AAAA;AAAA,QACKM,KADL;AAAA,QACYC,QADZ;;AAGF,QAAMC,MAAM,GAAG;AACX,kBAAc;AADH,GAAf;AAIA,QAAMC,SAAS,GAAG,IAAIP,SAAJ,EAAlB;AACAO,EAAAA,SAAS,CAACC,KAAV;;AAEA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAGF,SAAS,CAACG,OAAV,KAAsBR,SAAzB,EAAoC;AAChCG,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACH,KAFD,MAEO;AACHF,MAAAA,YAAY;AACf;AACJ,GAND;;AAQA,QAAMQ,YAAY,GAAG;AACjB,aAAS,MADQ;AAEjB,cAAU;AAFO,GAArB;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,KAAJ,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAW,QAAvC;AAAgD,IAAA,OAAO,EAAEK,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CADJ;AAMH,CA/BM","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport { Stopwatch } from \"ts-stopwatch\"\n\ninterface Props {\n    breakTime: number;\n    onTimePassed: () => void;\n}\n\nexport const BreakScreen: FunctionComponent<Props> = ({\n    breakTime,\n    onTimePassed\n}) => {\n    const [pText, setPText] = useState(\"Zakończyłeś odpowiadanie na zestaw. Poczekaj 2 min i kliknij w przycisk, aby przejść do następnego zestawu\");\n\n    const styles = {\n        \"text-align\": \"center\"\n    }\n\n    const stopwatch = new Stopwatch();\n    stopwatch.start();\n\n    const onClick = () => {\n        if(stopwatch.getTime() < breakTime) {\n            setPText(\"Jeszcze nie upłynęły 2 min\");\n        } else {\n            onTimePassed();\n        }\n    };\n\n    const buttonStyles = {\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n    }\n    return (\n        <div>\n            <p>{pText}</p>\n            <Button variant=\"contained\" text-align=\"center\" onClick={onClick}>Następny zestaw</Button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}